---
- name: Get first compute node
  shell: |
    oc get no --no-headers -l node-role.kubernetes.io/worker -o custom-columns='name:.metadata.name' | head -1
  register: _ocp_compute_nodes

- name: Retrieve /etc/crio/crio.conf
  shell: |
    {{ lookup('template','oc-debug-crio.j2') }}
  register: debug_node_result
  retries: 3
  delay: 10
  until: debug_node_result.rc==0

- name: Set pids_limit
  community.general.ini_file:
    path: "{{ status_dir }}/openshift/cp4d-crio.conf"
    section: "crio.runtime"
    option: pids_limit
    value: "12288"
    
- name: Generate ConfigMap definition cp4d-crio-conf-cm.yaml
  shell:
    oc create configmap -n kube-system cp4d-crio-conf \
        --from-file={{ status_dir }}/openshift/cp4d-crio.conf \
        -o yaml --dry-run=client > {{ status_dir }}/openshift/cp4d-crio-conf-cm.yaml

- name: Create ConfigMap cp4d-crio-conf
  shell: |
      oc apply -f {{ status_dir }}/openshift/cp4d-crio-conf-cm.yaml

- name: Generate DaemonSet to set the CRI-O config for all nodes
  template:
    src: cp4d-crio-conf-ds.j2
    dest: "{{ status_dir }}/openshift/cp4d-crio-conf-ds.yaml"
- name: Create or replace DaemonSet cp4d-crio-conf-ds
  shell: |
    if oc get ds -n kube-system cp4d-crio-conf-ds;then
      oc delete ds -n kube-system cp4d-crio-conf-ds
    fi
    oc apply -f {{ status_dir }}/openshift/cp4d-crio-conf-ds.yaml
